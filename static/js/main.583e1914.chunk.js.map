{"version":3,"sources":["components/c2-pages/Error404/Error404.module.css","components/c1-common/c1-SuperInputText/SuperInputText.module.css","components/c1-common/c4-SuperEditableSpan/SuperEditableSpan.module.css","components/c1-common/c2-SuperButton/SuperButton.module.css","components/c1-common/c3-SuperCheckbox/SuperCheckbox.module.css","components/ShowComponent/ShowComponent.module.css","components/c2-pages/Test/Test.module.css","components/c1-common/c7-SuperRange/SuperRange.module.css","components/c1-common/c91-SuperNavLink/SuperNavLink.module.css","components/c2-pages/Error404/Error404.tsx","components/c2-pages/Profile/Profile.tsx","components/c2-pages/PwdRestore/PwdRestore.tsx","components/c2-pages/PwdNew/PwdNew.tsx","components/c2-pages/Register/Register.tsx","components/c2-pages/Login/Login.tsx","components/c1-common/c1-SuperInputText/SuperInputText.tsx","components/c1-common/c2-SuperButton/SuperButton.tsx","components/c1-common/c3-SuperCheckbox/SuperCheckbox.tsx","components/c1-common/c4-SuperEditableSpan/SuperEditableSpan.tsx","components/c1-common/c5-SuperSelect/SuperSelect.tsx","components/c1-common/c6-SuperRadio/SuperRadio.tsx","components/c1-common/c7-SuperRange/SuperRange.tsx","components/ShowComponent/ShowComponent.tsx","components/c1-common/c91-SuperNavLink/SuperNavLink.tsx","components/c2-pages/Test/Test.tsx","components/c2-pages/Routes/Routes.tsx","components/Header/Header.tsx","App.tsx","bll/loginReducer.ts","bll/profileReducer.ts","bll/registerReducer.ts","bll/passwordNewReducer.ts","bll/passwordRestoreReducer.ts","bll/store.ts","index.tsx"],"names":["module","exports","Error404","className","s","error","text","image","src","alt","Profile","PwdRestore","PwdNew","Register","Login","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","pen","SuperSelect","options","onChangeOption","mappedOptions","map","op","i","SuperRadio","name","onChangeCallback","o","SuperRange","onChangeRange","finalRangeClassName","range","style","boxSizing","width","height","ShowComponent","props","item","h3","node","SuperNavLink","to","goTo","arr","Test","main","PATH","Routes","path","exact","render","Header","textAlign","color","App","initialState","reducers","combineReducers","login","state","action","register","profile","passwordNew","passwordRestore","store","createStore","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.583e1914.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__2lUuv\",\"text\":\"Error404_text__1S-G1\",\"image\":\"Error404_image__1oWMc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2y0HU\",\"errorInput\":\"SuperInputText_errorInput__35yXS\",\"error\":\"SuperInputText_error__3SDdl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pen\":\"SuperEditableSpan_pen__1oDUm\",\"spanParameter\":\"SuperEditableSpan_spanParameter__inZoE\",\"editableSpan\":\"SuperEditableSpan_editableSpan__3ABkt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3Ktc_\",\"red\":\"SuperButton_red__3Vlh-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__29PEs\",\"spanClassName\":\"SuperCheckbox_spanClassName__TbF1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ShowComponent_item__2OhUS\",\"h3\":\"ShowComponent_h3__1aXv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Test_main__FFdpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__Qf6B9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SuperNavLink_item__-eE7f\"};","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nexport function Error404() {\r\n    return (\r\n        <div className={s.error}>\r\n            <div className={s.text}>\r\n                404<br/>\r\n                Sorry...\r\n            </div>\r\n\r\n            <img className={s.image} src={'https://images-na.ssl-images-amazon.com/images/I/51yEw1u0HqL._AC_SY1000_.jpg'} alt={'turd'}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport function Profile() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function PwdRestore() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Restore Password</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function PwdNew() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>New Password</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function Register() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Register</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function Login() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeText,\r\n        onKeyPress,\r\n        onEnter,\r\n        error,\r\n        className,\r\n        spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }) => {\r\n\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeChecked,\r\n        className,\r\n        spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\n\r\nimport s from './SuperEditableSpan.module.css'\r\nimport SuperInputText from '../c1-SuperInputText/SuperInputText';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    // const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n    // const spanClassName = `${s.editableSpan}`\r\n    const spanClassName =\r\n        `${s.editableSpan}\r\n         ${restProps.spanClassName ? s[restProps.spanClassName] : ''}\r\n         ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <div>\r\n                        <img\r\n                            className={s.pen}\r\n                            // src='https://cdn.shopify.com/s/files/1/0573/7352/4157/products/94.png'\r\n                            src='https://iconarchive.com/download/i96727/iconsmind/outline/Pen.ico'\r\n                            alt='pen'\r\n                        />\r\n\r\n                        <span\r\n                            onDoubleClick={onDoubleClickCallBack}\r\n                            className={spanClassName}\r\n\r\n                            {...restSpanProps}\r\n                        >\r\n                            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                            {children || restProps.value}\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChangeOption,\r\n        onChange,\r\n        ...restProps\r\n    }) => {\r\n\r\n    // map options with key\r\n    const mappedOptions: any[] =\r\n        options\r\n            ? options.map((op, i) =>\r\n                <option\r\n                    key={i}\r\n                    value={op}\r\n                    // selected={restProps.value === op}\r\n                >\r\n                    {op}\r\n                </option>)\r\n            : []\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type,\r\n        name,\r\n        value,\r\n        onChange,\r\n        options,\r\n        onChangeOption,\r\n        ...restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                // name, checked, value, onChange\r\n                name={name}\r\n                checked={value === o}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n                {...restProps}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeRange,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                style={{boxSizing: 'border-box', width: '200px', height: '20px'}}\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import React, {ReactNode} from 'react';\r\nimport s from './ShowComponent.module.css'\r\n\r\ntype PropsType = {\r\n    name: string\r\n    node: ReactNode\r\n}\r\n\r\nexport function ShowComponent(props: PropsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <div>\r\n                <h3 className={s.h3}>{props.name}</h3>\r\n            </div>\r\n            {props.node}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './SuperNavLink.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    goTo: string\r\n    text: string\r\n}\r\n\r\nexport function SuperNavLink(props: PropsType) {\r\n    return (\r\n            <NavLink className={s.item} to={props.goTo}>{props.text}</NavLink>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Test.module.css'\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport SuperCheckbox from '../../c1-common/c3-SuperCheckbox/SuperCheckbox';\r\nimport SuperEditableSpan from '../../c1-common/c4-SuperEditableSpan/SuperEditableSpan';\r\nimport SuperSelect from '../../c1-common/c5-SuperSelect/SuperSelect';\r\nimport SuperRadio from '../../c1-common/c6-SuperRadio/SuperRadio';\r\nimport SuperRange from '../../c1-common/c7-SuperRange/SuperRange';\r\nimport {ShowComponent} from '../../ShowComponent/ShowComponent';\r\nimport {SuperNavLink} from '../../c1-common/c91-SuperNavLink/SuperNavLink';\r\n\r\nconst arr = ['Super', 'Select', 'SuperSelect']\r\n\r\nexport function Test() {\r\n    // const [value, onChangeOption] = useState(arr[2])\r\n    // const [value1Range, setValue1Range] = useState(25)\r\n\r\n    return (\r\n        <div className={s.main}>\r\n            <h1>Test</h1>\r\n\r\n            <ShowComponent name={'SuperInputText'} node={\r\n                <SuperInputText\r\n                    value={'SuperInputText'}\r\n                    // onChangeText={setText}\r\n                    // onEnter={showAlert}\r\n                    // error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n            }/>\r\n\r\n            <ShowComponent name={'SuperButton'} node={\r\n                <SuperButton>\r\n                    SuperButton\r\n                </SuperButton>\r\n            }/>\r\n\r\n            <ShowComponent name={'SuperCheckbox'} node={\r\n                <SuperCheckbox\r\n                    // checked={checked}\r\n                    // onChangeChecked={setChecked}\r\n                >\r\n                    SuperCheckbox\r\n                </SuperCheckbox>\r\n            }/>\r\n\r\n            <ShowComponent name={'SuperEditableSpan'} node={\r\n                <SuperEditableSpan\r\n                    value={'SuperEditableSpan'}\r\n                    // onChangeText={setValue}\r\n                    // spanProps={{children: value ? undefined : 'enter text...'}}\r\n                    //\r\n                    // test props\r\n                    // onEnter={() => alert('Hello, onEnter!')}\r\n                    // onBlur={() => alert('Hello, onBlur!')}\r\n                    // spanClassName={'spanParameter'}\r\n                />\r\n            }/>\r\n\r\n            <ShowComponent name={'SuperSelect'} node={\r\n                <SuperSelect\r\n                    value={'SuperSelect'}\r\n                    options={arr}\r\n                    // onChangeOption={onChangeOption}\r\n                    // onChange={() => alert('This is SELECT onChange')}\r\n                />\r\n            }/>\r\n\r\n            <ShowComponent name={'SuperRadio'} node={\r\n                <SuperRadio\r\n                    options={arr}\r\n                    value={arr[2]}\r\n                    // value={value}\r\n                    // name={'radio'}\r\n                    // onChangeOption={onChangeOption}\r\n                    // onChange={() => alert('This is RADIO onChange')}\r\n                />\r\n            }/>\r\n\r\n\r\n            <ShowComponent name={'SuperRange'} node={\r\n                <SuperRange\r\n                    value={25}\r\n                    // value={value1Range}\r\n                    // onChangeRange={setStartRange}\r\n                />\r\n            }/>\r\n\r\n            {/*<SuperDoubleRange/>*/}\r\n\r\n            <ShowComponent name={'SuperNavLink'} node={\r\n                <SuperNavLink\r\n                    goTo={'/test'}\r\n                    text={'Go to Test page'}\r\n                />\r\n            }/>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Routes.module.css'\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {Error404} from '../Error404/Error404';\r\nimport {Profile} from '../Profile/Profile';\r\nimport {PwdRestore} from '../PwdRestore/PwdRestore';\r\nimport {PwdNew} from '../PwdNew/PwdNew';\r\nimport {Register} from '../Register/Register';\r\nimport {Login} from '../Login/Login';\r\nimport { Test } from '../Test/Test';\r\n\r\n/*\r\nлогинизация\r\nрегистрация\r\nпрофайл\r\n404 (можно застилизовать заранее)\r\nвосстановление пароля\r\nввод нового пароля\r\nтестовая - отобразить/продемонстрировать все SuperКомпоненты\r\n */\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTER: '/register',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RESTORE: '/pwd-restore',\r\n    PASSWORD_NEW: '/pwd-new',\r\n    TEST: '/test',\r\n}\r\n\r\n\r\nexport function Routes() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Test/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <Register/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.PASSWORD_RESTORE} render={() => <PwdRestore/>}/>\r\n                <Route path={PATH.PASSWORD_NEW} render={() => <PwdNew/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {PATH} from '../c2-pages/Routes/Routes';\r\nimport {SuperNavLink} from '../c1-common/c91-SuperNavLink/SuperNavLink';\r\n\r\n\r\nexport function Header() {\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign: 'center', color: 'red'}}>FRIDAY</h1>\r\n\r\n            <SuperNavLink goTo={PATH.LOGIN} text={'Login page'}/>\r\n            <SuperNavLink goTo={PATH.REGISTER} text={'Register page'}/>\r\n            <SuperNavLink goTo={PATH.PROFILE} text={'Profile page'}/>\r\n            <SuperNavLink goTo={PATH.PASSWORD_RESTORE} text={'Restore password page'}/>\r\n            <SuperNavLink goTo={PATH.PASSWORD_NEW} text={'New password page'}/>\r\n            <SuperNavLink goTo={PATH.TEST} text={'Test page'}/>\r\n            <SuperNavLink goTo={'Error404'} text={'Error page'}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Header } from './components/Header/Header';\r\nimport {Routes} from './components/c2-pages/Routes/Routes';\r\n\r\n\r\nexport function App() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n\r\n            <Routes/>\r\n        </div>\r\n    )\r\n}\r\n","const initialState = {}\n\ntype StateType = typeof initialState\n\ntype ActionType = any\n\nexport function loginReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n\n        default:\n            return state\n    }\n}","const initialState = {}\n\ntype StateType = typeof initialState\n\ntype ActionType = any\n\nexport function profileReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n\n        default:\n            return state\n    }\n}","const initialState = {}\n\ntype StateType = typeof initialState\n\ntype ActionType = any\n\nexport function registerReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n\n        default:\n            return state\n    }\n}","const initialState = {}\n\ntype StateType = typeof initialState\n\ntype ActionType = any\n\nexport function passwordNewReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n\n        default:\n            return state\n    }\n}","const initialState = {}\n\ntype StateType = typeof initialState\n\ntype ActionType = any\n\nexport function passwordRestoreReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n\n        default:\n            return state\n    }\n}","import {combineReducers, createStore} from 'redux'\nimport {loginReducer} from './loginReducer'\nimport {profileReducer} from './profileReducer'\nimport {registerReducer} from './registerReducer'\nimport {passwordNewReducer} from './passwordNewReducer';\nimport {passwordRestoreReducer} from './passwordRestoreReducer';\n\n\nconst reducers = combineReducers({\n    login: loginReducer,\n    register: registerReducer,\n    profile: profileReducer,\n    passwordNew: passwordNewReducer,\n    passwordRestore: passwordRestoreReducer,\n})\n\nconst store = createStore(reducers)\n\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store // for dev\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {App} from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './bll/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n/*\r\nreportWebVitals();\r\n*/"],"sourceRoot":""}