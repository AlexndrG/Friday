{"version":3,"sources":["components/c2-pages/Register/Register.module.css","components/c2-pages/Profile/Profile.module.css","components/c2-pages/Error404/Error404.module.css","components/c1-common/c1-SuperInputText/SuperInputText.module.css","components/c1-common/c4-SuperEditableSpan/SuperEditableSpan.module.css","components/c2-pages/Login/Login.module.css","components/c1-common/c3-SuperCheckbox/SuperCheckbox.module.css","components/c1-common/c2-SuperButton/SuperButton.module.css","components/ShowComponent/ShowComponent.module.css","components/c2-pages/Routes/Routes.module.css","components/c2-pages/Test/Test.module.css","components/c1-common/c7-SuperRange/SuperRange.module.css","components/c1-common/c91-SuperNavLink/SuperNavLink.module.css","components/Loader/Loader.module.css","components/c2-pages/Error404/Error404.tsx","components/c2-pages/PwdRestore/PwdRestore.tsx","components/c2-pages/PwdNew/PwdNew.tsx","components/c1-common/c3-SuperCheckbox/SuperCheckbox.tsx","components/c2-pages/Login/LoginForm.tsx","components/c2-pages/Login/login-api.ts","dal/api-profile.ts","dal/api-register.ts","bll/registerReducer.ts","bll/profileReducer.ts","bll/loginReducer.ts","components/c2-pages/Login/Login.tsx","components/c1-common/c1-SuperInputText/SuperInputText.tsx","components/c1-common/c2-SuperButton/SuperButton.tsx","components/c1-common/c4-SuperEditableSpan/SuperEditableSpan.tsx","components/c1-common/c5-SuperSelect/SuperSelect.tsx","components/c1-common/c6-SuperRadio/SuperRadio.tsx","components/c1-common/c7-SuperRange/SuperRange.tsx","components/ShowComponent/ShowComponent.tsx","components/c1-common/c91-SuperNavLink/SuperNavLink.tsx","components/c2-pages/Test/Test.tsx","components/Loader/loader.gif","components/Loader/Loader.tsx","components/c2-pages/Register/Register.tsx","components/c2-pages/Register/RegisterContainer.tsx","components/c2-pages/Profile/Profile.tsx","components/c2-pages/Profile/ProfileCintainer.tsx","components/c2-pages/Routes/Routes.tsx","components/Header/Header.tsx","App.tsx","bll/passwordNewReducer.ts","bll/passwordRestoreReducer.ts","bll/store.ts","index.tsx"],"names":["module","exports","Error404","className","s","error","text","image","src","alt","PwdRestore","PwdNew","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","restProps","finalInputClassName","checkbox","e","currentTarget","checked","LoginForm","props","value","email","onEmailChange","password","onPasswordChange","rememberMe","onCheckboxChange","to","PATH","PASSWORD_RESTORE","onClick","onSubmit","REGISTER","instance","axios","create","baseURL","withCredentials","loginAPI","post","profileAPI","avatar","name","put","registerAPI","initialState","isBusy","isRegistered","setIsBusyAC","setIsRegisteredAC","setErrorAC","errorText","userData","_id","publicCardPacksCount","created","Date","updated","isAdmin","verified","setProfileData","userProfile","updateNameAndImgTC","imgUrl","dispatch","then","res","setNameAC","setAvatarAC","catch","err","response","data","finally","loginStatus","isLoggedIn","setLoginStatus","status","Login","useSelector","state","login","useDispatch","useState","formData","setFormData","PROFILE","loginContainer","loginCard","message","SuperInputText","onChangeText","onKeyPress","onEnter","finalSpanClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","pen","SuperSelect","options","onChangeOption","mappedOptions","map","op","i","SuperRadio","onChangeCallback","o","SuperRange","onChangeRange","finalRangeClassName","range","style","boxSizing","width","height","ShowComponent","item","h3","node","SuperNavLink","goTo","arr","Test","main","Loader","loader","loadingPicture","Register","form","emailChange","disabled","passwordChange","password2","password2Change","registerPress","RegisterContainer","register","useEffect","setEmail","setPassword","setPassword2","registerTC","Profile","profileContainer","profileData","avatarUI","changeAvatarHandler","onKeyAvatarChangeHandler","onBlurAvatarHandler","nameUi","changeNameHandler","onKeyNameChangeHandler","onBlurNameHandler","ProfileContainer","profile","setAvatarUi","setNameUi","charCode","LOGIN","PASSWORD_NEW","TEST","Routes","routeContainer","path","exact","render","Header","textAlign","color","App","reducers","combineReducers","action","passwordNew","passwordRestore","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af1ebda2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Register_main__8fPPB\",\"form\":\"Register_form__H-o_t\",\"item\":\"Register_item__m_B3S\",\"error\":\"Register_error__1rjyb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__1T1nd\",\"profileData\":\"Profile_profileData__12B0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__2lUuv\",\"text\":\"Error404_text__1S-G1\",\"image\":\"Error404_image__1oWMc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2y0HU\",\"errorInput\":\"SuperInputText_errorInput__35yXS\",\"error\":\"SuperInputText_error__3SDdl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pen\":\"SuperEditableSpan_pen__1oDUm\",\"spanParameter\":\"SuperEditableSpan_spanParameter__inZoE\",\"editableSpan\":\"SuperEditableSpan_editableSpan__3ABkt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__LscJN\",\"loginCard\":\"Login_loginCard__C7z3b\",\"form\":\"Login_form__1XTMr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__29PEs\",\"spanClassName\":\"SuperCheckbox_spanClassName__TbF1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3Ktc_\",\"red\":\"SuperButton_red__3Vlh-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ShowComponent_item__2OhUS\",\"h3\":\"ShowComponent_h3__1aXv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"routeContainer\":\"Routes_routeContainer__1Wjnj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Test_main__FFdpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__Qf6B9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SuperNavLink_item__-eE7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__Bzd-c\"};","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nexport function Error404() {\r\n    return (\r\n        <div className={s.error}>\r\n            <div className={s.text}>\r\n                404<br/>\r\n                Sorry...\r\n            </div>\r\n\r\n            <img className={s.image} src={'https://images-na.ssl-images-amazon.com/images/I/51yEw1u0HqL._AC_SY1000_.jpg'} alt={'turd'}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport function PwdRestore() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Restore Password</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function PwdNew() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>New Password</h1>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeChecked,\r\n        className,\r\n        spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SuperCheckbox from \"../../c1-common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport {PATH} from \"../Routes/Routes\";\r\n\r\ntype LoginFormPropsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    onEmailChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onPasswordChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onCheckboxChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onSubmit: () => void\r\n}\r\n\r\nexport const LoginForm = (props: LoginFormPropsType) => {\r\n    return <>\r\n        <input type={\"text\"} value={props.email} onChange={props.onEmailChange}/>\r\n        <input type=\"password\" value={props.password} onChange={props.onPasswordChange}/>\r\n        <label>\r\n            <SuperCheckbox checked={props.rememberMe} onChange={props.onCheckboxChange}/><span>remember me</span>\r\n        </label>\r\n        <NavLink to={PATH.PASSWORD_RESTORE}> Forgot? </NavLink>\r\n        <button onClick={props.onSubmit}>Send</button>\r\n        <NavLink to={PATH.REGISTER}> Register </NavLink>\r\n    </>\r\n};\r\n\r\n","import axios from 'axios'\r\n\r\n// Test mode\r\n// const baseURL = 'http://localhost:7542/2.0/'\r\n// Normal mode\r\nconst baseURL = 'https://neko-back.herokuapp.com/2.0/'\r\n\r\nexport const instance = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n})\r\nexport type ProfileDataResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n\r\n}\r\nexport const loginAPI = {\r\n    logIn(email:string, password:string,rememberMe:boolean) {\r\n        return instance.post<ProfileDataResponseType>('auth/login',{email,password,rememberMe})\r\n    },\r\n    logOut(){\r\n        return instance.delete('auth/me')\r\n    }\r\n}\r\n","import {instance} from '../components/c2-pages/Login/login-api';\r\n\r\nexport const profileAPI = {\r\n    updateProfileData(avatar: string | undefined, name: string) {\r\n        // return instance.put<RegisterResponseType>('auth/me', {avatar: avatar, name: name});\r\n        return instance.put<RegisterParamsType, AxiosResponse>('auth/me', {avatar, name});\r\n    },\r\n    getAuthInfo() {\r\n        // return instance.post<RegisterResponseType>('auth/me');\r\n        // return instance.post<RegisterParamsType, AxiosResponse>('auth/me', {});\r\n        return instance.post<LoginResponseType>('auth/me', {});\r\n    },\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number // количество колод\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean            // подтвердил ли почту\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\n\r\ntype RegisterParamsType = {\r\n    avatar?: string\r\n    name?: string\r\n}\r\n\r\ntype AxiosResponse = {\r\n    data: RegisterResponseType\r\n}\r\n\r\ntype DeviceTokensType = {\r\n    _id: string\r\n    device: string\r\n}\r\n\r\ntype RegisterResponseType = {\r\n    avatar: string\r\n    created: string\r\n    deviceTokens: Array<DeviceTokensType>\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPackCount: number\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n    updated: string\r\n    verified: boolean\r\n    error?: string\r\n}","import {instance} from '../components/c2-pages/Login/login-api';\r\n\r\nexport const registerAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>('auth/register', {email, password});\r\n        // return instance.post<RegisterParamsType, AxiosResponse<RegisterResponseType>>('auth/register',{email, password});\r\n    },\r\n}\r\n\r\n// type RegisterParamsType = {\r\n//     email: string\r\n//     password: string\r\n// }\r\n\r\ntype RegisterResponseType = {\r\n    error?: string\r\n}","import {Dispatch} from 'redux'\r\nimport {registerAPI} from '../dal/api-register';\r\n\r\nconst initialState = {\r\n    isBusy: false,\r\n    isRegistered: false,\r\n    error: '',\r\n}\r\ntype StateType = typeof initialState\r\n\r\nexport function registerReducer(state: StateType = initialState, action: ActionType): StateType {\r\n    switch (action.type) {\r\n        case 'REGISTER/SET-IS-BUSY':\r\n            return {\r\n                ...state,\r\n                isBusy: action.isBusy,\r\n            }\r\n\r\n        case 'REGISTER/SET-IS-REGISTERED':\r\n            return {\r\n                ...state,\r\n                isRegistered: action.isRegistered,\r\n            }\r\n\r\n        case 'REGISTER/SET-ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.errorText,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsBusyAC = (isBusy: boolean) => ({type: 'REGISTER/SET-IS-BUSY', isBusy} as const)\r\nexport const setIsRegisteredAC = (isRegistered: boolean) => ({type: 'REGISTER/SET-IS-REGISTERED', isRegistered} as const)\r\nexport const setErrorAC = (errorText: string) => ({type: 'REGISTER/SET-ERROR', errorText} as const)\r\n\r\n\r\nexport const registerTC = (email: string, password: string) => (dispatch: Dispatch) => {\r\n    dispatch(setErrorAC(''))\r\n    dispatch(setIsBusyAC(true))\r\n    registerAPI.register(email, password)\r\n        .then(res => {\r\n            // console.log('res: ',res.data)\r\n            // console.dir(res)\r\n            dispatch(setIsRegisteredAC(true))\r\n        })\r\n        .catch(err => {\r\n            // console.log('err: ',err.response.data)\r\n            // console.dir(err)\r\n            dispatch(setErrorAC(err.response ? err.response.data.error : err.message))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setIsBusyAC(false))\r\n        })\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof setIsBusyAC>\r\n    | ReturnType<typeof setIsRegisteredAC>\r\n    | ReturnType<typeof setErrorAC>\r\n","import {ProfileDataResponseType} from '../components/c2-pages/Login/login-api';\r\nimport {Dispatch} from 'redux'\r\nimport {profileAPI} from '../dal/api-profile';\r\nimport {setIsBusyAC} from \"./registerReducer\";\r\nimport {setLoginData} from \"./loginReducer\";\r\n\r\nconst initialState = {\r\n    userData: {\r\n        _id: '',\r\n        email: '',\r\n        name: '',\r\n        avatar: '',\r\n        publicCardPacksCount: 0,// количество колод\r\n        created: new Date(),\r\n        updated: new Date(),\r\n        isAdmin: false,\r\n        verified: false, // подтвердил ли почту\r\n        rememberMe: false,\r\n        error: '',\r\n    } as ProfileDataResponseType,\r\n\r\n    isBusy: false,\r\n    error: '',\r\n}\r\n\r\ntype StateType = typeof initialState\r\n\r\nexport function profileReducer(state: StateType = initialState, action: ActionType): StateType {\r\n    switch (action.type) {\r\n        case 'profile/SET-PROFILE-DATA': {\r\n            return {\r\n                ...state,\r\n                userData: {...action.userProfile}\r\n            }\r\n        }\r\n\r\n        case 'PROFILE/SET-USER-NAME':\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    name: action.name\r\n                }\r\n            }\r\n\r\n        case 'PROFILE/SET-USER-AVATAR':\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    avatar: action.imgUrl\r\n                }\r\n            }\r\n\r\n        case 'PROFILE/SET-ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.errorText,\r\n            }\r\n\r\n\r\n        case 'PROFILE/SET-IS-BUSY':\r\n            return {\r\n                ...state,\r\n                isBusy: action.isBusy\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const setProfileData = (userProfile: ProfileDataResponseType) => {\r\n    return {\r\n        type: 'profile/SET-PROFILE-DATA',\r\n        userProfile\r\n    } as const\r\n}\r\nexport type ProfileActionType = ReturnType<typeof setProfileData>\r\n\r\nexport const setNameAC = (name: string) => ({type: 'PROFILE/SET-USER-NAME', name} as const)\r\nexport const setAvatarAC = (imgUrl: string | undefined)  => ({type: 'PROFILE/SET-USER-AVATAR', imgUrl} as const)\r\nexport const setErrorAC = (errorText: string) => ({type: 'PROFILE/SET-ERROR', errorText} as const)\r\nexport const setBusyAC = (isBusy: boolean) => ({type: 'PROFILE/SET-IS-BUSY', isBusy} as const)\r\n\r\n\r\nexport const updateNameAndImgTC = (imgUrl: string | undefined, name: string) => (dispatch: Dispatch) => {\r\n    // dispatch(setIsBusyAC(true))\r\n    profileAPI.updateProfileData(imgUrl, name)\r\n        .then((res) => {\r\n            dispatch(setNameAC(name))\r\n            dispatch(setAvatarAC(imgUrl))\r\n        })\r\n        .catch(err => {\r\n            dispatch(setErrorAC(err.response.data.error))\r\n        })\r\n        .finally(() => {\r\n        dispatch(setIsBusyAC(false))\r\n    })\r\n}\r\n\r\nexport const getAuthUserTC = () => (dispatch: Dispatch) => {\r\n    profileAPI.getAuthInfo()\r\n        .then((response) => {\r\n            dispatch(setProfileData({...response.data}))\r\n        })\r\n        .catch(() => {\r\n            // dispatch(setLoginData(false))\r\n        })\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof setNameAC>\r\n    | ReturnType<typeof setAvatarAC>\r\n    | ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setBusyAC>\r\n    | ProfileActionType\r\n","import {loginAPI} from \"../components/c2-pages/Login/login-api\";\r\nimport {Dispatch} from \"react\";\r\nimport {ProfileActionType, setProfileData} from \"./profileReducer\";\r\nimport {AxiosError} from 'axios'\r\n\r\nexport type LoginStatusType = 'Loading' | 'Succeeded' | ''\r\ntype LoginStateType = {\r\n    isLoggedIn: boolean\r\n    error: string,\r\n    loginStatus: LoginStatusType\r\n}\r\n\r\nconst initialState: LoginStateType = {\r\n    loginStatus: '',\r\n    isLoggedIn: false,\r\n    error: '',\r\n}\r\n\r\n\r\nexport function loginReducer(state: LoginStateType = initialState, action: LoginActionTypes): LoginStateType {\r\n    switch (action.type) {\r\n        case \"login/SET-LOGIN-DATA\": {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true\r\n            }\r\n        }\r\n        case 'login/SET-LOGIN-STATUS':{\r\n            return {\r\n                ...state,\r\n                loginStatus:action.status\r\n            }\r\n        }\r\n        case \"login/SET-ERROR\":{\r\n            return {\r\n                ...state,\r\n                error:action.error\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const setLoginData = () => {\r\n    return {\r\n        type: 'login/SET-LOGIN-DATA',\r\n    } as const\r\n}\r\nexport const setLoginStatus = (status: LoginStatusType) => {\r\n    return {\r\n        type: 'login/SET-LOGIN-STATUS',\r\n        status\r\n    } as const\r\n}\r\nexport const setError = (error: string) => {\r\n    return {\r\n        type: 'login/SET-ERROR',\r\n        error\r\n    } as const\r\n}\r\ntype LoginActionTypes =\r\n    ReturnType<typeof setLoginStatus>\r\n    | ReturnType<typeof setLoginData>\r\n    | ReturnType<typeof setError>\r\n    | ProfileActionType\r\n//thunk\r\nexport const setLoginRequest = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch<LoginActionTypes>) => {\r\n    dispatch(setLoginStatus('Loading'))\r\n    loginAPI.logIn(email, password, rememberMe)\r\n        .then(response => {\r\n            dispatch(setLoginData())\r\n            dispatch(setProfileData({...response.data}))\r\n            dispatch(setLoginStatus('Succeeded'))\r\n        })\r\n        .catch((e: AxiosError) => {\r\n            dispatch(setError(e.message))\r\n            dispatch(setLoginStatus(''))\r\n        })\r\n}\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './Login.module.css'\r\nimport {LoginForm} from \"./LoginForm\";\r\nimport {LoginStatusType, setLoginRequest} from \"../../../bll/loginReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes/Routes\";\r\nimport {AppRootStateType} from '../../../bll/store';\r\n\r\ntype FormStateType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport function Login() {\r\n    const isLoggedIn = useSelector<AppRootStateType,boolean>(state=>state.login.isLoggedIn)\r\n    const error = useSelector<AppRootStateType,string>(state=>state.login.error)\r\n    const status = useSelector<AppRootStateType,LoginStatusType>(state=>state.login.loginStatus)\r\n    const dispatch = useDispatch()\r\n    let [formData, setFormData] = useState<FormStateType>({\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false\r\n    })\r\n\r\n    const onEmailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({...formData,email:e.currentTarget.value})\r\n    }\r\n    const onPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({...formData,password:e.currentTarget.value})\r\n    }\r\n    const onCheckboxChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({...formData,rememberMe:e.currentTarget.checked})\r\n    }\r\n    const onSubmitHandler = () => {\r\n        dispatch(setLoginRequest(formData.email, formData.password, formData.rememberMe))\r\n        setFormData({...formData,email:'',rememberMe:false,password:''})\r\n    }\r\n     if(isLoggedIn)return <Redirect to={PATH.PROFILE}/>\r\n\r\n    return (\r\n        <div className={s.loginContainer}>\r\n            <div className={s.loginCard}>\r\n                <h1>Sign in</h1>\r\n                {error&&error}\r\n                {status&&status}\r\n                <LoginForm\r\n                    email={formData.email}\r\n                    password={formData.password}\r\n                    rememberMe={formData.rememberMe}\r\n                    onEmailChange={onEmailChange}\r\n                    onPasswordChange={onPasswordChange}\r\n                    onCheckboxChange={onCheckboxChange}\r\n                    onSubmit={onSubmitHandler}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeText,\r\n        onKeyPress,\r\n        onEnter,\r\n        error,\r\n        className,\r\n        spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }) => {\r\n\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\n\r\nimport s from './SuperEditableSpan.module.css'\r\nimport SuperInputText from '../c1-SuperInputText/SuperInputText';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    // const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n    // const spanClassName = `${s.editableSpan}`\r\n    const spanClassName =\r\n        `${s.editableSpan}\r\n         ${restProps.spanClassName ? s[restProps.spanClassName] : ''}\r\n         ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <div>\r\n                        <img\r\n                            className={s.pen}\r\n                            // src='https://cdn.shopify.com/s/files/1/0573/7352/4157/products/94.png'\r\n                            src='https://iconarchive.com/download/i96727/iconsmind/outline/Pen.ico'\r\n                            alt='pen'\r\n                        />\r\n\r\n                        <span\r\n                            onDoubleClick={onDoubleClickCallBack}\r\n                            className={spanClassName}\r\n\r\n                            {...restSpanProps}\r\n                        >\r\n                            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                            {children || restProps.value}\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChangeOption,\r\n        onChange,\r\n        ...restProps\r\n    }) => {\r\n\r\n    // map options with key\r\n    const mappedOptions: any[] =\r\n        options\r\n            ? options.map((op, i) =>\r\n                <option\r\n                    key={i}\r\n                    value={op}\r\n                    // selected={restProps.value === op}\r\n                >\r\n                    {op}\r\n                </option>)\r\n            : []\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type,\r\n        name,\r\n        value,\r\n        onChange,\r\n        options,\r\n        onChangeOption,\r\n        ...restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                // name, checked, value, onChange\r\n                name={name}\r\n                checked={value === o}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n                {...restProps}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeRange,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                style={{boxSizing: 'border-box', width: '200px', height: '20px'}}\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import React, {ReactNode} from 'react';\r\nimport s from './ShowComponent.module.css'\r\n\r\ntype PropsType = {\r\n    name: string\r\n    node: ReactNode\r\n}\r\n\r\nexport function ShowComponent(props: PropsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <div>\r\n                <h3 className={s.h3}>{props.name}</h3>\r\n            </div>\r\n            {props.node}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './SuperNavLink.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    goTo: string\r\n    text: string\r\n}\r\n\r\nexport function SuperNavLink(props: PropsType) {\r\n    return (\r\n            <NavLink className={s.item} to={props.goTo}>{props.text}</NavLink>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Test.module.css'\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport SuperCheckbox from '../../c1-common/c3-SuperCheckbox/SuperCheckbox';\r\nimport SuperEditableSpan from '../../c1-common/c4-SuperEditableSpan/SuperEditableSpan';\r\nimport SuperSelect from '../../c1-common/c5-SuperSelect/SuperSelect';\r\nimport SuperRadio from '../../c1-common/c6-SuperRadio/SuperRadio';\r\nimport SuperRange from '../../c1-common/c7-SuperRange/SuperRange';\r\nimport {ShowComponent} from '../../ShowComponent/ShowComponent';\r\nimport {SuperNavLink} from '../../c1-common/c91-SuperNavLink/SuperNavLink';\r\n\r\nconst arr = ['Super', 'Select', 'SuperSelect']\r\n\r\nexport function Test() {\r\n    // const [value, onChangeOption] = useState(arr[2])\r\n    // const [value1Range, setValue1Range] = useState(25)\r\n\r\n    return (\r\n        <div>\r\n            <h1>Test</h1>\r\n\r\n            <div className={s.main}>\r\n                <ShowComponent name={'SuperInputText'} node={\r\n                    <SuperInputText\r\n                        value={'SuperInputText'}\r\n                        // onChangeText={setText}\r\n                        // onEnter={showAlert}\r\n                        // error={error}\r\n                        // spanClassName={s.testSpanError}\r\n                    />\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperButton'} node={\r\n                    <SuperButton>\r\n                        SuperButton\r\n                    </SuperButton>\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperCheckbox'} node={\r\n                    <SuperCheckbox\r\n                        // checked={checked}\r\n                        // onChangeChecked={setChecked}\r\n                    >\r\n                        SuperCheckbox\r\n                    </SuperCheckbox>\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperEditableSpan'} node={\r\n                    <SuperEditableSpan\r\n                        value={'SuperEditableSpan'}\r\n                        // onChangeText={setValue}\r\n                        // spanProps={{children: value ? undefined : 'enter text...'}}\r\n                        //\r\n                        // test props\r\n                        // onEnter={() => alert('Hello, onEnter!')}\r\n                        // onBlur={() => alert('Hello, onBlur!')}\r\n                        // spanClassName={'spanParameter'}\r\n                    />\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperSelect'} node={\r\n                    <SuperSelect\r\n                        value={'SuperSelect'}\r\n                        options={arr}\r\n                        // onChangeOption={onChangeOption}\r\n                        // onChange={() => alert('This is SELECT onChange')}\r\n                    />\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperRadio'} node={\r\n                    <SuperRadio\r\n                        options={arr}\r\n                        value={arr[2]}\r\n                        // value={value}\r\n                        // name={'radio'}\r\n                        // onChangeOption={onChangeOption}\r\n                        // onChange={() => alert('This is RADIO onChange')}\r\n                    />\r\n                }/>\r\n\r\n\r\n                <ShowComponent name={'SuperRange'} node={\r\n                    <SuperRange\r\n                        value={25}\r\n                        // value={value1Range}\r\n                        // onChangeRange={setStartRange}\r\n                    />\r\n                }/>\r\n\r\n                {/*<SuperDoubleRange/>*/}\r\n\r\n                <ShowComponent name={'SuperNavLink'} node={\r\n                    <SuperNavLink\r\n                        goTo={'/test'}\r\n                        text={'Go to Test page'}\r\n                    />\r\n                }/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/loader.b6485230.gif\";","import React from 'react';\r\nimport s from './Loader.module.css'\r\nimport loadingPicture from './loader.gif'\r\n\r\nexport function Loader() {\r\n    return <img className={s.loader} src={loadingPicture}/>\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from './Register.module.css'\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {Loader} from '../../Loader/Loader';\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    email: string\r\n    password: string\r\n    password2: string\r\n    error: string\r\n    emailChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    passwordChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    password2Change: (e: ChangeEvent<HTMLInputElement>) => void\r\n    registerPress: () => void\r\n}\r\n\r\nexport function Register(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <h1>Register</h1>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    E-mail\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.email}\r\n                        onChange={props.emailChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password}\r\n                        onChange={props.passwordChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password (repeat)\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password2}\r\n                        onChange={props.password2Change}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.registerPress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Register\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {props.isBusy &&\r\n            <div>\r\n                <Loader/>\r\n            </div>}\r\n\r\n            {props.error &&\r\n            <div className={s.error}>\r\n                {props.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {Register} from './Register';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {registerTC, setErrorAC, setIsRegisteredAC} from '../../../bll/registerReducer';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport function RegisterContainer() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.register.isBusy)\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n    const error = useSelector<AppRootStateType, string>(state => state.register.error)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setErrorAC(''))\r\n            dispatch(setIsRegisteredAC(false))\r\n        }\r\n    }, [])\r\n\r\n    // const [email, setEmail] = useState<string>('')\r\n    // const [password1, setPassword1] = useState<string>('')\r\n    // const [password2, setPassword2] = useState<string>('')\r\n    const [email, setEmail] = useState<string>('dfkcnsldkfj@sdfsifd.ru')\r\n    const [password, setPassword] = useState<string>('11111111')\r\n    const [password2, setPassword2] = useState<string>('11111111')\r\n\r\n    const emailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setErrorAC(''))\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const passwordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setErrorAC(''))\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const password2Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setErrorAC(''))\r\n        setPassword2(e.currentTarget.value)\r\n    }\r\n\r\n    const registerPress = () => {\r\n        if (email === '' || password === '' || password2 === '') {\r\n            dispatch(setErrorAC('Fill all fields!'))\r\n            return\r\n        }\r\n\r\n        if (password !== password2) {\r\n            dispatch(setErrorAC('Passwords do not match!'))\r\n            return\r\n        }\r\n\r\n        dispatch(registerTC(email, password))\r\n    }\r\n\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <Register\r\n            isBusy={isBusy}\r\n            email={email}\r\n            password={password}\r\n            password2={password2}\r\n            emailChange={emailChange}\r\n            passwordChange={passwordChange}\r\n            password2Change={password2Change}\r\n            registerPress={registerPress}\r\n            error={error}\r\n        />\r\n    )\r\n}","import React, {ChangeEvent, FocusEvent, KeyboardEvent, useEffect, useState} from 'react';\r\nimport SuperEditableSpan from '../../c1-common/c4-SuperEditableSpan/SuperEditableSpan';\r\nimport s from './Profile.module.css'\r\nimport {Loader} from \"../../Loader/Loader\";\r\n\r\ntype ProfilePropsType = {\r\n    isBusy: boolean\r\n    imgUrl: string | undefined\r\n    name: string\r\n    isLoggedIn: boolean\r\n    error: string\r\n    avatarUI: string | undefined\r\n    nameUi: string\r\n    changeAvatarHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onKeyAvatarChangeHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    onBlurAvatarHandler: (e: FocusEvent<HTMLInputElement>) => void\r\n    changeNameHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onKeyNameChangeHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    onBlurNameHandler: (e: FocusEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport function Profile(props: ProfilePropsType) {\r\n    return (\r\n        <div className={s.profileContainer}>\r\n            <div className={s.profileData}>\r\n                <img alt={'Profile image'} src={props.avatarUI}/>\r\n            </div>\r\n            <div className={s.profileData}>\r\n                Avatar URL:\r\n                <SuperEditableSpan\r\n                    value={props.avatarUI}\r\n                    onChange={props.changeAvatarHandler}\r\n                    onKeyPress={props.onKeyAvatarChangeHandler}\r\n                    onBlur={props.onBlurAvatarHandler}\r\n                />\r\n            </div>\r\n            <div className={s.profileData}>\r\n                Name:\r\n                <SuperEditableSpan\r\n                    value={props.nameUi}\r\n                    onChange={props.changeNameHandler}\r\n                    onKeyPress={props.onKeyNameChangeHandler}\r\n                    onBlur={props.onBlurNameHandler}\r\n                />\r\n            </div>\r\n\r\n            {props.isBusy &&\r\n            <div>\r\n                <Loader/>\r\n            </div>}\r\n            {props.error !== '' && <div>{props.error}</div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, KeyboardEvent, FocusEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {getAuthUserTC, updateNameAndImgTC} from '../../../bll/profileReducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Profile} from \"./Profile\";\r\n\r\nexport function ProfileContainer() {\r\n    const imgUrl = useSelector<AppRootStateType, string | undefined>(state => state.profile.userData.avatar)\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.userData.name)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.profile.isBusy)\r\n    const error = useSelector<AppRootStateType, string>(state => state.profile.error)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getAuthUserTC())\r\n    }, [])\r\n\r\n    const [avatarUI, setAvatarUi] = useState(imgUrl)\r\n    const [nameUi, setNameUi] = useState(name)\r\n\r\n    const changeAvatarHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAvatarUi(e.currentTarget.value)\r\n    }\r\n    const onKeyAvatarChangeHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            dispatch(updateNameAndImgTC(e.currentTarget.value, nameUi))\r\n        }\r\n    }\r\n    const onBlurAvatarHandler = (e: FocusEvent<HTMLInputElement>) => {\r\n        dispatch(updateNameAndImgTC(e.currentTarget.value, nameUi))\r\n    }\r\n\r\n    const changeNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNameUi(e.currentTarget.value)\r\n    }\r\n    const onKeyNameChangeHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            dispatch(updateNameAndImgTC(avatarUI, e.currentTarget.value))\r\n        }\r\n    }\r\n    const onBlurNameHandler = (e: FocusEvent<HTMLInputElement>) => {\r\n        dispatch(updateNameAndImgTC(avatarUI, e.currentTarget.value))\r\n    }\r\n\r\n\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <Profile\r\n            isBusy={isBusy}\r\n            imgUrl={imgUrl}\r\n            name={name}\r\n            isLoggedIn={isLoggedIn}\r\n            error={error}\r\n            avatarUI={avatarUI}\r\n            nameUi={nameUi}\r\n            changeAvatarHandler={changeAvatarHandler}\r\n            onKeyAvatarChangeHandler={onKeyAvatarChangeHandler}\r\n            onBlurAvatarHandler={onBlurAvatarHandler}\r\n            changeNameHandler={changeNameHandler}\r\n            onKeyNameChangeHandler={onKeyNameChangeHandler}\r\n            onBlurNameHandler={onBlurNameHandler}\r\n        />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './Routes.module.css'\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {Error404} from '../Error404/Error404';\r\nimport {PwdRestore} from '../PwdRestore/PwdRestore';\r\nimport {PwdNew} from '../PwdNew/PwdNew';\r\nimport {Login} from '../Login/Login';\r\nimport {Test} from '../Test/Test';\r\nimport {RegisterContainer} from '../Register/RegisterContainer';\r\nimport {ProfileContainer} from \"../Profile/ProfileCintainer\";\r\n\r\n/*\r\nлогинизация\r\nрегистрация\r\nпрофайл\r\n404 (можно застилизовать заранее)\r\nвосстановление пароля\r\nввод нового пароля\r\nтестовая - отобразить/продемонстрировать все SuperКомпоненты\r\n */\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTER: '/register',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RESTORE: '/pwd-restore',\r\n    PASSWORD_NEW: '/pwd-new',\r\n    TEST: '/test',\r\n}\r\n\r\n\r\nexport function Routes() {\r\n    return (\r\n        <div className={s.routeContainer}>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Test/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <RegisterContainer/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <ProfileContainer/>}/>\r\n                <Route path={PATH.PASSWORD_RESTORE} render={() => <PwdRestore/>}/>\r\n                <Route path={PATH.PASSWORD_NEW} render={() => <PwdNew/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {PATH} from '../c2-pages/Routes/Routes';\r\nimport {SuperNavLink} from '../c1-common/c91-SuperNavLink/SuperNavLink';\r\n\r\n\r\nexport function Header() {\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign: 'center', color: 'red'}}>FRIDAY</h1>\r\n\r\n            <SuperNavLink goTo={PATH.LOGIN} text={'Login page'}/>\r\n            <SuperNavLink goTo={PATH.REGISTER} text={'Register page'}/>\r\n            <SuperNavLink goTo={PATH.PROFILE} text={'Profile page'}/>\r\n            <SuperNavLink goTo={PATH.PASSWORD_RESTORE} text={'Restore password page'}/>\r\n            <SuperNavLink goTo={PATH.PASSWORD_NEW} text={'New password page'}/>\r\n            <SuperNavLink goTo={PATH.TEST} text={'Test page'}/>\r\n            <SuperNavLink goTo={'Error404'} text={'Error page'}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Header } from './components/Header/Header';\r\nimport {Routes} from './components/c2-pages/Routes/Routes';\r\n\r\n\r\nexport function App() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n\r\n            <Routes/>\r\n        </div>\r\n    )\r\n}\r\n","const initialState = {}\n\ntype StateType = typeof initialState\n\ntype ActionType = any\n\nexport function passwordNewReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n\n        default:\n            return state\n    }\n}","const initialState = {}\n\ntype StateType = typeof initialState\n\ntype ActionType = any\n\nexport function passwordRestoreReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n\n        default:\n            return state\n    }\n}","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport {loginReducer} from './loginReducer'\r\nimport {profileReducer} from './profileReducer'\r\nimport {registerReducer} from './registerReducer'\r\nimport {passwordNewReducer} from './passwordNewReducer';\r\nimport {passwordRestoreReducer} from './passwordRestoreReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    profile: profileReducer,\r\n    passwordNew: passwordNewReducer,\r\n    passwordRestore: passwordRestoreReducer,\r\n})\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunkMiddleware))\r\n\r\nexport default store\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store // for dev\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {App} from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './bll/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n/*\r\nreportWebVitals();\r\n*/"],"sourceRoot":""}